A main predicate is used in this heuristic. This is the ListWin predicate it goes through all the board and look for winning pieces. These winning positions are put in a list (coordinates with winning caracteristics) .
When you need to place the piece that was given to you, the read position predicate look for a position where the piece can win if placed there.
On the other way when you need to choose a piece for your opponnent you use again the ListWin but this time the piece you give must not have a common caracteristics with one of the winnings piece in the ListWin so that your opponent can't win with this piece on his turn.

EXAMPLE :

[1,0,0,10]
[0,2,11,0]
[00,0,3,0]
[12,0,0,0] 

WITH THIS BOARD THE WINLIST IS  [[white, 4, 4], [short, 4, 4], [black, 3, 2], [short, 3, 2]]
You can win by either placing a white piece in 4,4 or a short one in 4,4 etc......
In this board we cannot find a piece to win we have to loose considering there is a winnable position with a black piece and a white piece. Considering a piece is either white or black there is no solution.
In this case we call a random piece because the previous predicate will fail


EXAMPLE :

[1,0,0,10]
[0,2,11,0]
[00,0,0,0]
[12,0,0,0] 

WITH THIS BOARD THE WINLIST IS [[black, 3, 2], [short, 3, 2]]
So after placing the piece we would choose one that doesn't allow our opponnent to win.
In this case we need a piece that isn't black or that isn't short.
